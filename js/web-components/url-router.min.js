// @link https://www.dataformsjs.com
// @version 5.14.6
// @author Conrad Sollitt (https://conradsollitt.com)
// @license MIT
import{render,setElementText,formatData,bindAttrTmpl,polyfillCustomElements,showError,showErrorAlert,componentsAreDefined}from"./utils.min.js";const appEvents={routeChanged:"app:routeChanged",error:"app:error"},shadowTmpl=document.createElement("template");shadowTmpl.innerHTML="\n    <style>:host { display:none; }</style>\n    <slot></slot>\n";class UrlRouter extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}).appendChild(shadowTmpl.content.cloneNode(!0)),this.currentRoute=null,this.currentUrlParams=null,this.updateView=this.updateView.bind(this),this.handlePushStateClick=this.handlePushStateClick.bind(this),this.useHistoryMode="history"===this.getAttribute("mode")}connectedCallback(){const t=this.useHistoryMode?"popstate":"hashchange";window.addEventListener(t,this.updateView),this.updateView()}disconnectedCallback(){const t=this.useHistoryMode?"popstate":"hashchange";window.removeEventListener(t,this.updateView)}async updateView(){this.currentRoute&&this.executeJsEvent("onunload"),this.currentRoute=null,this.currentUrlParams=null,await componentsAreDefined(this,"url-route");const t=this.getAttribute("view-selector");if(null===t||""===t)return void this.showFatalError("Error, element <url-router> is missing attribute [view-selector]");const e=document.querySelector(t);if(null===e)return void this.showFatalError(render`Error, element from <url-router view-selector="${t}"> was not found on the page.`);const r=this.getAttribute("loading-template-selector");if(r){const t=document.querySelector(r);t?"TEMPLATE"===t.tagName?e.innerHTML=t.innerHTML:console.warn(`Unable to show loading screen from <url-router loading-template-selector="${r}">. Only <template> tags are allowed.`):console.warn(`Unable to show loading screen from <url-router loading-template-selector="${r}">. Element from selector is missing.`)}let o=this.useHistoryMode?window.location.pathname:window.location.hash.substring(1);""===o&&(o="/");const n=this.querySelectorAll("url-route");let s=null;for(const t of n){if(null===t.path)return this.showFatalError("Error, element <url-route> is missing attribute [path]"),void console.log(t);const r=this.routeMatches(o,t.path);if(r.isMatch){const n=t.redirect;if(null!==n&&n!==o)return void(this.useHistoryMode?(window.history.pushState(null,null,t.redirect),this.updateView()):window.location.hash="#"+n);await this.lazyLoadScripts(t);const s=t.template;return this.currentRoute=t,this.currentUrlParams=r.urlParams,void(null===s?this.downloadTemplate(e,t,r.urlParams):this.setView(e,s,r.urlParams))}t.isDefault&&(s=t)}if(s){const t=s.path;if(""!==t&&-1===t.indexOf(":"))return void this.changeRoute(t);if("/:lang/"===t){await componentsAreDefined(document,"i18n-service");const t=document.querySelector("i18n-service");if(t&&"function"==typeof t.getUserDefaultLang){const e=t.getUserDefaultLang();if(null!==e)return void this.changeRoute("/"+e+"/")}return void showError(e,"Missing Web Component [i18n-service.js]")}}showError(e,`Error - The route [${o}] does not have a matching <url-route> element and no default route is defined using [default-route].`)}showFatalError(t){this.style.display="block",this.style.padding="1em",this.style.backgroundColor="red",this.style.color="white",this.style.fontSize="1.5em",this.textContent=t,this.dispatchRouteChanged(null,t),console.error(t)}dispatchRouteChanged(t,e){void 0!==e&&this.dispatchEvent(new CustomEvent(appEvents.error,{bubbles:!0,detail:e}));const r=null!==this.currentRoute,o={url:r?this.currentRoute.path:null,urlParams:t};this.dispatchEvent(new CustomEvent(appEvents.routeChanged,{bubbles:!0,detail:o})),r&&this.executeJsEvent("onload")}executeJsEvent(t){const e=this.currentRoute.getAttribute(t);if(e)try{const t=new Function("return "+e)();"function"==typeof t&&t()}catch(r){showErrorAlert(`Error from function <url-route path="${this.currentRoute.getAttribute("path")}" ${t}="${e}">: ${r.message}`),console.error(r)}}downloadTemplate(t,e,r){const o=e.src;if(null===o||""===o){const o=`Missing <template> or [src] attribute for route <url-route path="${e.path}">.`;return showError(t,o),void this.dispatchRouteChanged(r,o)}fetch(o,{mode:"cors",cache:"no-store",credentials:"same-origin"}).then((t=>{const e=t.status;if(e>=200&&e<300||304===e)return Promise.resolve(t);{const r="Error loading data. Server Response Code: "+e+", Response Text: "+t.statusText;return Promise.reject(r)}})).then((t=>t.text())).then((o=>{e.template=o,this.setView(t,o,r)})).catch((r=>{const n=render`Error with <url-route path="${e.path}"> - Error Downloading Template: [${o}], Error: ${r}`;showError(t,n),this.dispatchEvent(new CustomEvent(appEvents.error,{bubbles:!0,detail:n}))}))}setView(t,e,r){t.innerHTML=e;let o=t.querySelectorAll("[url-params]");const n=JSON.stringify(r);for(const t of o)t.setAttribute("url-params",n);o=t.querySelectorAll("[url-param]");for(const t of o){const e=t.getAttribute("url-param"),o=void 0===r[e]?"":r[e];setElementText(t,formatData(t,o))}o=t.querySelectorAll("[url-attr-param]");for(const t of o)bindAttrTmpl(t,"url-attr-param",r);if(polyfillCustomElements(),this.useHistoryMode){const t=document.querySelectorAll('a[href^="/"]:not([data-no-pushstate])');for(const e of t)e.addEventListener("click",this.handlePushStateClick)}this.dispatchRouteChanged(r)}changeRoute(t){if("string"!=typeof t)throw new TypeError("Expected string for <url-router>.changeRoute(path)");this.useHistoryMode?(window.history.pushState(null,null,t),this.updateView()):window.location.hash=0===t.indexOf("#")?t:"#"+t}handlePushStateClick(t){if(!0!==t.ctrlKey&&!t.metaKey)return t.preventDefault(),t.stopPropagation(),t.currentTarget.href?(window.history.pushState(null,null,t.currentTarget.href),this.updateView()):showErrorAlert("Error, link click does not work because href is missing."),!1}routeMatches(t,e){const r=t.split("/"),o=e.split("/"),n=r.length,s={};if(n!==o.length)return{isMatch:!1};for(let t=0;t<n;t++){const e=decodeURIComponent(r[t]);if(e!==o[t]){if(":"!==o[t].substring(0,1))return{isMatch:!1};s[o[t].substring(1)]=e}}return{isMatch:!0,urlParams:s}}async lazyLoadScripts(t){const e=t.getAttribute("lazy-load"),r=[];if(e){e.split(",").map((t=>t.trim())).forEach((t=>{void 0!==window.lazyLoad&&void 0!==window.lazyLoad[t]?r.push(this.loadScripts(window.lazyLoad[t])):showErrorAlert("Missing [window.lazyLoad] scripts for: "+t)}))}await Promise.all(r)}loadScripts(t){if(!Array.isArray(t)){if(!("string"==typeof t||t instanceof Object&&("module"in t||"nomodule"in t)))return showErrorAlert("Invalid Script for [loadScripts()] or [window.lazyLoad], expected string, an array of strings, or a valid object. Check console."),console.warn("window.loadScripts():"),console.warn(t),new Promise((function(t){t()}));t=[t]}return new Promise((function(e){let r=0;const o=t.length;!function n(){if(r===o)return void e();let s=t[r],i=!1;if(s instanceof Object){if(void 0===s.module)return void e();i=!0,s=s.module}r++,s.endsWith(".js")?function(t,e){return new Promise((function(r){const o=document.querySelectorAll("script");for(let e=0,n=o.length;e<n;e++)if(o[e].getAttribute("src")===t)return void r();const n=document.createElement("script");n.onload=r,n.onerror=()=>{showErrorAlert("Error loading JS File: "+t),r()},e&&n.setAttribute("type","module"),n.src=t,document.head.appendChild(n)}))}(s,i).then(n):s.endsWith(".css")?function(t){return new Promise((function(e){const r=document.querySelectorAll("link");for(let o=0,n=r.length;o<n;o++)if("stylesheet"===r[o].rel&&r[o].getAttribute("href")===t)return void e();const o=document.createElement("link");o.rel="stylesheet",o.onload=e,o.onerror=()=>{showErrorAlert("Error loading CSS File: "+t),e()},o.href=t,document.head.appendChild(o)}))}(s).then(n):(showErrorAlert("Invalid Script for [loadScripts()] or [window.lazyLoad]: "+s),n())}()}))}}class UrlRoute extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}).appendChild(shadowTmpl.content.cloneNode(!0))}get path(){return this.getAttribute("path")}get src(){return this.getAttribute("src")}get redirect(){return this.getAttribute("redirect")}get isDefault(){return null!==this.getAttribute("default-route")}get template(){const t=this.querySelector("template");return null===t?null:t.innerHTML}set template(t){let e=this.querySelector("template");null===e&&(e=document.createElement("template"),this.appendChild(e)),e.innerHTML=t}}window.customElements.define("url-router",UrlRouter),window.customElements.define("url-route",UrlRoute);